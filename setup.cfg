[metadata]
name = pycsou-pywt
url = https://github.com/AdriaJ/pycsou-pywt
description = A simple plugin to implement wavelet decomposition as Pycsou linear operator. The plugin interfaces Pycsou with PyWavelets and thus enables a wide range of wavelet bases to be used.
long_description = file: README.md
long_description_content_type = text/markdown

author = Adrian Jarret
author_email = adrian.jarret@epfl.ch
license = MIT
license_files = LICENSE
classifiers =
    Development Status :: 2 - Pre-Alpha
    Framework :: pycsou
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Topic :: Scientific/Engineering :: Image Processing


[options]
packages = find:
install_requires =
    numpy
    pycsou @ git+https://github.com/matthieumeo/pycsou@v2-dev
    pywavelets
    matplotlib
python_requires = >=3.9
include_package_data = True
package_dir =
    =src
setup_requires = setuptools_scm
# add your package requirements here

[options.packages.find]
where = src

# Note the `_` underscore to overload a base Pycsou class.
[options.entry_points]
pycsou.operator =
    WaveletDec2 = pycsou_pywt:WaveletDec2

[options.extras_require]
testing =
    tox >= 3.25, < 4
    pytest  # https://docs.pytest.org/en/latest/contents.html
    pytest-cov  # https://pytest-cov.readthedocs.io/en/latest/
dev =
    sphinx >= 5.1, < 6
    tox >= 3.25, < 4
    sphinx-rtd-theme == 1.1, < 2
    pytest >= 7.1, < 8

[options.package_data]
* = *.yaml

[flake8]
max-complexity = 10
exclude =
	# __init__.py often contain weird code to import top-level items.
	__init__.py
extend-ignore =
	# We follow Black's guidelines here.
	# E501: line too long
	# E203: whitespace before ':'
	# E302: expected 2 blank lines, found 1
	E501
	E203
	E302

	# Do not use lambda expressions. (OK when used sparringly.)
	E731

	# Too many leading '#' for block comment.
	# We use more '#' terms at times to improve visual delimiters of long block comments.
	E266

	# Implementation is too complex.
	# (Sometimes necessary in scientific code.)
	C901